// SPDX-License-Identifier: MIT

pragma solidity ^0.8.16;

contract JackpotPrizePoolRegistry {
    struct JackpotSchema { 
        STATUS status; // status of the raffle. Can be created, accepted, ended, etc
        uint256 maxEntries; // maximum number of entries allowed per user, to avoid abuse
        address collateralAddress; // address of the NFT
        uint256 collateralId; // NFT id of the NFT
        address winner; // address of thed winner of the raffle. Address(0) if no winner yet
        uint256 randomNumber; // normalized (0-Entries array size) random number generated by the VRF
        uint256 amountRaised; // funds raised so far in wei
        address[] entries; // array of addresses of the entries bought
        address seller; // address of the seller of the NFT
        uint256 platformPercentage; // percentage of the funds raised that goes to the platform
        address requiredNFT; // address of the required nft. Will be address(0) if no NFT is required to buy
        uint256 entriesLength; // to easy frontend, the length of the entries array is saved here
        uint256 cancellingDate;
    }

    JackpotSchema[] public jackpots;

    function createNewJackpot(

    )
        external
        // onlyRole(DEFAULT_ADMIN_ROLE)
        returns (uint256)
    {
        uint256 jackpotId = jackpots.length; 

        jackpots[jackpotId] = new Jackpot({

        });

        return jackpotId; 
    }
}